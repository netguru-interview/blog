---
# yamllint disable rule:line-length

name: CI/CD

# yamllint disable-line rule:truthy
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  PYTHONUNBUFFERED: "1"

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    container:
      image: shmileee/pre-commit:latest
    steps:
      - uses: actions/checkout@v2
      - name: Run tests
        run: |
          make test

  build-images:
    name: Build images
    runs-on: ubuntu-latest
    needs: test
    outputs:
      IMAGE_TAG: ${{ steps.tag.outputs.IMAGE_TAG }}
    steps:
      - uses: actions/checkout@v2

      - name: Check if image needs to be built
        uses: technote-space/get-diff-action@v3
        with:
          PREFIX_FILTER: |
            backend

      - name: Set image tag to latest if nothing changed
        id: tag
        if: ${{ !env.GIT_DIFF }}
        run: |
          echo "::set-output name=IMAGE_TAG::latest"

      - name: Build images and publish
        if: env.GIT_DIFF
        env:
          DOCKER_REPOSITORY: docker.io/shmileee
          DOCKER_USERNAME: shmileee
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "$DOCKER_USERNAME" --password-stdin
          export IMAGE_TAG=$(git rev-parse HEAD | head -c 7)
          cd backend && make build && make publish

  preview:
    name: Deploy preview environment
    runs-on: ubuntu-latest
    needs: build-images
    steps:
      - uses: actions/checkout@v2
      - name: Deploy preview environment
        id: deploy
        env:
          ARGOCD_HOST: argo.kloud-native.com
          ARGOCD_USERNAME: ${{ secrets.ARGOCD_USERNAME }}
          ARGOCD_PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
          POSTGRESQL_USERNAME: ${{ secrets.POSTGRESQL_USERNAME }}
          POSTGRESQL_PASSWORD: ${{ secrets.POSTGRESQL_PASSWORD }}
          POSTGRESQL_DATABASE: ${{ secrets.POSTGRESQL_DATABASE }}
        run: |

          if [ "${{ needs.build-images.outputs.IMAGE_TAG }}" != "latest" ]; then
            export IMAGE_TAG=$(git rev-parse HEAD | head -c 7)
          else
            export IMAGE_TAG=latest
          fi

          export PR_NUMBER=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          curl -o argocd -L https://github.com/argoproj/argo-cd/releases/download/v1.7.6/argocd-linux-amd64 && chmod +x ./argocd
          ./argocd login "${ARGOCD_HOST}" --grpc-web --username "${ARGOCD_USERNAME}" --password "${ARGOCD_PASSWORD}" --insecure
          ./argocd app create preview-${{ github.event.number }} --repo https://github.com/netguru-interview/blog-helm-charts.git \
            --dest-server https://kubernetes.default.svc \
            --dest-namespace ci \
            --sync-policy automated \
            --path . \
            --upsert \
            -p postgresql.postgresqlUsername="${POSTGRESQL_USERNAME}" \
            -p postgresql.postgresqlPassword="${POSTGRESQL_PASSWORD}" \
            -p postgresql.postgresqlDatabase="${POSTGRESQL_DATABASE}" \
            -p backend.image.tag=$IMAGE_TAG \
            -p backend.ingress.route.hosts.blog=preview-${{ github.event.number }}.kloud-native.com

      - uses: peter-evans/create-or-update-comment@v1
        if: github.event_name == 'pull_request'
        with:
          issue-number: ${{ tojson(github.event.number) }}
          body: |
            Preview Application URL: https://preview-${{ github.event.number }}.kloud-native.com
